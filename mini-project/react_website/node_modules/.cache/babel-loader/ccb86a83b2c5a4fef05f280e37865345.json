{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar trimPairs = function trimPairs(pairs, rule) {\n  var reg = rule.reg,\n      to = rule.to;\n  var done = [];\n  var remain = pairs.filter(function (pair) {\n    var _pair = _slicedToArray(pair, 2),\n        left = _pair[0],\n        right = _pair[1];\n\n    if (left.match(reg)) {\n      if (left.replace(reg, to) === right) {\n        done.push(pair);\n        return false; //done with it\n      }\n    }\n\n    return true; // keep it\n  });\n  return {\n    remain: remain,\n    done: done\n  };\n}; // remove any rules that challenge existing pairs\n\n\nvar trimRules = function trimRules(rules, pairsDone) {\n  return rules.filter(function (r) {\n    for (var i = 0; i < pairsDone.length; i += 1) {\n      var pair = pairsDone[i];\n\n      if (r.reg.test(pair[0]) && pair[0].replace(r.reg, r.to) !== pair[1]) {\n        // console.log('banned rule:', r)\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\nexport { trimRules, trimPairs };","map":null,"metadata":{},"sourceType":"module"}