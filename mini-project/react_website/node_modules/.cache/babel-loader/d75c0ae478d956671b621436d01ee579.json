{"ast":null,"code":"import doRules from './lib.js';\nvar s = 'ically';\nvar ical = new Set(['analyt' + s, //analytical\n'chem' + s, // chemical\n'class' + s, //classical\n'clin' + s, // clinical\n'crit' + s, // critical\n'ecolog' + s, // ecological\n'electr' + s, // electrical\n'empir' + s, // empirical\n'frant' + s, // frantical\n'grammat' + s, // grammatical\n'ident' + s, // identical\n'ideolog' + s, // ideological\n'log' + s, // logical\n'mag' + s, //magical\n'mathemat' + s, // mathematical\n'mechan' + s, // mechanical\n'med' + s, // medical\n'method' + s, // methodical\n'method' + s, // methodical\n'mus' + s, // musical\n'phys' + s, // physical\n'phys' + s, // physical\n'polit' + s, // political\n'pract' + s, // practical\n'rad' + s, //radical\n'satir' + s, // satirical\n'statist' + s, // statistical\n'techn' + s, // technical\n'technolog' + s, // technological\n'theoret' + s, // theoretical\n'typ' + s, // typical\n'vert' + s, // vertical\n'whims' + s // whimsical\n]);\nvar suffixes = [null, {}, {\n  'ly': ''\n}, {\n  'ily': 'y',\n  'bly': 'ble',\n  'ply': 'ple'\n}, {\n  'ally': 'al',\n  'rply': 'rp'\n}, {\n  'ually': 'ual',\n  'ially': 'ial',\n  'cally': 'cal',\n  'eally': 'eal',\n  'rally': 'ral',\n  'nally': 'nal',\n  'mally': 'mal',\n  'eeply': 'eep',\n  'eaply': 'eap'\n}, {\n  ically: 'ic'\n}];\nvar noAdj = new Set(['early', 'only', 'hourly', 'daily', 'weekly', 'monthly', 'yearly', 'mostly', 'duly', 'unduly', 'especially', 'undoubtedly', 'conversely', 'namely', 'exceedingly', 'presumably', 'accordingly', 'overly', 'best', 'latter', 'little', 'long', 'low']); // exceptions to rules\n\nvar exceptions = {\n  wholly: 'whole',\n  fully: 'full',\n  truly: 'true',\n  gently: 'gentle',\n  singly: 'single',\n  customarily: 'customary',\n  idly: 'idle',\n  publically: 'public',\n  quickly: 'fast',\n  well: 'good' // -?\n\n};\n\nvar toAdjective = function toAdjective(str) {\n  if (!str.endsWith('ly')) {\n    return null;\n  } // 'electronic' vs 'electronical'\n\n\n  if (ical.has(str)) {\n    return str.replace(/ically/, 'ical');\n  }\n\n  if (noAdj.has(str)) {\n    return null;\n  }\n\n  if (exceptions.hasOwnProperty(str)) {\n    return exceptions[str];\n  }\n\n  return doRules(str, suffixes) || str;\n};\n\nexport default toAdjective; // console.log(toAdjective('emphatically'))\n// console.log(toAdjective('usually'))\n// console.log(toAdjective('mechanically'))\n// console.log(toAdjective('vertically'))","map":null,"metadata":{},"sourceType":"module"}