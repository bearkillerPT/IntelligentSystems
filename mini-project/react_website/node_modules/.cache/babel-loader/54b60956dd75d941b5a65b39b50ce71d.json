{"ast":null,"code":"var Histogram = function Histogram() {\n  this.counts = {};\n};\n\nvar methods = {\n  init: function init(sym) {\n    if (this.counts[sym] === undefined) {\n      this.counts[sym] = 0;\n    }\n  },\n  add: function add(sym, n) {\n    if (n === undefined) {\n      n = 1;\n    }\n\n    this.init(sym);\n    this.counts[sym] += n;\n  },\n  countOf: function countOf(sym) {\n    this.init(sym);\n    return this.counts[sym];\n  },\n  highest: function highest(top) {\n    var sorted = [];\n    var keys = Object.keys(this.counts);\n\n    for (var i = 0; i < keys.length; i++) {\n      var sym = keys[i];\n      sorted.push([sym, this.counts[sym]]);\n    }\n\n    sorted.sort(function (a, b) {\n      return b[1] - a[1];\n    });\n\n    if (top) {\n      sorted = sorted.slice(0, top);\n    }\n\n    return sorted;\n  }\n};\nObject.keys(methods).forEach(function (k) {\n  Histogram.prototype[k] = methods[k];\n});\nexport default Histogram;","map":null,"metadata":{},"sourceType":"module"}