{"ast":null,"code":"/* eslint-disable no-bitwise */\n\n/* eslint-disable no-mixed-operators */\n\n/* eslint-disable no-multi-assign */\n// https://github.com/jbt/tiny-hashes/\nvar k = [],\n    i = 0;\n\nfor (; i < 64;) {\n  k[i] = 0 | Math.sin(++i % Math.PI) * 4294967296;\n}\n\nexport default function md5(s) {\n  var b,\n      c,\n      d,\n      h = [b = 0x67452301, c = 0xEFCDAB89, ~b, ~c],\n      words = [],\n      j = decodeURI(encodeURI(s)) + '\\x80',\n      a = j.length;\n  s = --a / 4 + 2 | 15;\n  words[--s] = a * 8;\n\n  for (; ~a;) {\n    words[a >> 2] |= j.charCodeAt(a) << 8 * a--;\n  }\n\n  for (i = j = 0; i < s; i += 16) {\n    a = h;\n\n    for (; j < 64; a = [d = a[3], b + ((d = a[0] + [b & c | ~b & d, d & b | ~d & c, b ^ c ^ d, c ^ (b | ~d)][a = j >> 4] + k[j] + ~~words[i | [j, 5 * j + 1, 3 * j + 5, 7 * j][a] & 15]) << (a = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * a + j++ % 4]) | d >>> -a), b, c]) {\n      b = a[1] | 0;\n      c = a[2];\n    }\n\n    for (j = 4; j;) {\n      h[--j] += a[j];\n    }\n  }\n\n  for (s = ''; j < 32;) {\n    s += (h[j >> 3] >> (1 ^ j++) * 4 & 15).toString(16);\n  }\n\n  return s;\n} // console.log(md5('food-safety'))","map":null,"metadata":{},"sourceType":"module"}