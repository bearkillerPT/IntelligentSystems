{"ast":null,"code":"var rules = [// === Conjunction ===\n// that the houses\n{\n  match: '[that] #Determiner #Noun',\n  group: 0,\n  chunk: 'Pivot'\n}, // estimated that\n{\n  match: '#PastTense [that]',\n  group: 0,\n  chunk: 'Pivot'\n}, // === Adjective ===\n// was really nice\n{\n  match: '#Copula #Adverb+? [#Adjective]',\n  group: 0,\n  chunk: 'Adjective'\n}, // was nice\n// { match: '#Copula [#Adjective]', group: 0, chunk: 'Adjective' },\n// nice and cool\n{\n  match: '#Adjective and #Adjective',\n  chunk: 'Adjective'\n}, // really nice\n// { match: '#Adverb+ #Adjective', chunk: 'Adjective' },\n// === Verb ===\n// quickly run\n// { match: '#Adverb+ {Verb}', chunk: 'Verb' },\n// quickly and suddenly run\n{\n  match: '#Adverb+ and #Adverb #Verb',\n  chunk: 'Verb'\n}, // run quickly\n// { match: '{Verb} #Adverb+', chunk: 'Verb' },\n// sitting near\n{\n  match: '#Gerund #Adjective',\n  chunk: 'Verb'\n}, // going to walk\n{\n  match: '#Gerund to #Verb',\n  chunk: 'Verb'\n}, // is no\n// { match: '#Copula no', chunk: 'Verb' },\n// had not\n// { match: '#Verb #Negative', chunk: 'Verb' },\n// not seen\n// { match: '#Negative #Verb', chunk: 'Verb' },\n// not really\n// { match: '#Negative #Adverb ', chunk: 'Verb' },\n// really not\n{\n  match: '#Adverb #Negative',\n  chunk: 'Verb'\n}, // want to see\n{\n  match: '(want|wants|wanted) to #Infinitive',\n  chunk: 'Verb'\n}, // walk ourselves\n{\n  match: '#Verb #Reflexive',\n  chunk: 'Verb'\n}, // tell him the story\n{\n  match: '#PresentTense [#Pronoun] #Determiner',\n  group: 0,\n  chunk: 'Verb'\n}, // tries to walk\n{\n  match: '#Verb [to] #Adverb? #Infinitive',\n  group: 0,\n  chunk: 'Verb'\n}, // upon seeing\n{\n  match: '[#Preposition] #Gerund',\n  group: 0,\n  chunk: 'Verb'\n}, // === Noun ===\n// the brown fox\n// { match: '#Determiner #Adjective+ #Noun', chunk: 'Noun' },\n// the fox\n// { match: '(the|this) <Noun>', chunk: 'Noun' },\n// brown fox\n// { match: '#Adjective+ <Noun>', chunk: 'Noun' },\n// --- of ---\n// son of a gun\n{\n  match: '#Noun of #Determiner? #Noun',\n  chunk: 'Noun'\n}, // --- in ---\n{\n  match: '#Noun in #Determiner? #Noun',\n  chunk: 'Noun'\n}, // indoor and outdoor seating\n{\n  match: '#Singular and #Determiner? #Singular',\n  chunk: 'Noun'\n} // that is why\n// { match: '[that] (is|was)', group: 0, chunk: 'Noun' },\n];\nvar net = null;\n\nvar matcher = function matcher(view, _, world) {\n  var methods = world.methods;\n  net = net || methods.one.buildNet(rules, world);\n  view.sweep(net);\n};\n\nexport default matcher;","map":null,"metadata":{},"sourceType":"module"}