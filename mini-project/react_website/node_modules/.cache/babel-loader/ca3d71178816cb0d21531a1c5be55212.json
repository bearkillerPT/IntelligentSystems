{"ast":null,"code":"import { getGreedy } from './logic/greedy.js'; // keep 'foo+' or 'foo*' going..\n\nvar greedyMatch = function greedyMatch(state) {\n  var regs = state.regs,\n      phrase_length = state.phrase_length;\n  var reg = regs[state.r];\n  state.t = getGreedy(state, regs[state.r + 1]);\n\n  if (state.t === null) {\n    return null; //greedy was too short\n  } // foo{2,4} - has a greed-minimum\n\n\n  if (reg.min && reg.min > state.t) {\n    return null; //greedy was too short\n  } // 'foo+$' - if also an end-anchor, ensure we really reached the end\n\n\n  if (reg.end === true && state.start_i + state.t !== phrase_length) {\n    return null; //greedy didn't reach the end\n  }\n\n  return true;\n};\n\nexport default greedyMatch;","map":null,"metadata":{},"sourceType":"module"}