{"ast":null,"code":"//all punctuation marks, from https://en.wikipedia.org/wiki/Punctuation\n//we have slightly different rules for start/end - like #hashtags.\nvar startings = /^[ \\n\\t.[\\](){}⟨⟩:,،、‒–—―…!‹›«»‐\\-?‘’;/⁄·&*•^†‡°¡¿※№÷×ºª%‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿\\u0022\\uFF02\\u0027\\u201C\\u201F\\u201B\\u201E\\u2E42\\u201A\\u2035\\u2036\\u2037\\u301D\\u0060\\u301F]+/;\nvar endings = /[ \\n\\t.'[\\](){}⟨⟩:,،、‒–—―…!‹›«»‐\\-?‘’;/⁄·&*@•^†‡°¡¿※#№÷×ºª‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿\\u0022\\uFF02\\u201D\\u00B4\\u301E]+$/;\nvar hasApostrophe = /['’]/;\nvar hasAcronym = /^[a-z]\\.([a-z]\\.)+/i;\nvar minusNumber = /^[-+.][0-9]/;\nvar shortYear = /^'[0-9]{2}/;\n\nvar normalizePunctuation = function normalizePunctuation(str) {\n  var original = str;\n  var pre = '';\n  var post = ''; // number cleanups\n\n  str = str.replace(startings, function (found) {\n    pre = found; // support '-40'\n\n    if ((pre === '-' || pre === '+' || pre === '.') && minusNumber.test(str)) {\n      pre = '';\n      return found;\n    } // support years like '97\n\n\n    if (pre === \"'\" && shortYear.test(str)) {\n      pre = '';\n      return found;\n    }\n\n    return '';\n  });\n  str = str.replace(endings, function (found) {\n    post = found; // keep s-apostrophe - \"flanders'\" or \"chillin'\"\n\n    if (hasApostrophe.test(found) && /[sn]['’]$/.test(original) && hasApostrophe.test(pre) === false) {\n      post = post.replace(hasApostrophe, '');\n      return \"'\";\n    } //keep end-period in acronym\n\n\n    if (hasAcronym.test(str) === true) {\n      post = post.replace(/\\./, '');\n      return '.';\n    }\n\n    return '';\n  }); //we went too far..\n\n  if (str === '') {\n    // do a very mild parse, and hope for the best.\n    original = original.replace(/ *$/, function (after) {\n      post = after || '';\n      return '';\n    });\n    str = original;\n    pre = '';\n  }\n\n  return {\n    str: str,\n    pre: pre,\n    post: post\n  };\n};\n\nexport default normalizePunctuation;","map":null,"metadata":{},"sourceType":"module"}