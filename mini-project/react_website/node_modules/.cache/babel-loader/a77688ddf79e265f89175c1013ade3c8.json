{"ast":null,"code":"export default [// ==== Honorifics ====\n{\n  match: '[(1st|2nd|first|second)] #Honorific',\n  group: 0,\n  tag: 'Honorific',\n  reason: 'ordinal-honorific'\n}, {\n  match: '[(private|general|major|corporal|lord|lady|secretary|premier)] #Honorific? #Person',\n  group: 0,\n  tag: 'Honorific',\n  reason: 'ambg-honorifics'\n}, // ==== FirstNames ====\n//is foo Smith\n{\n  match: '#Copula [(#Noun|#PresentTense)] #LastName',\n  group: 0,\n  tag: 'FirstName',\n  reason: 'copula-noun-lastname'\n}, //pope francis\n{\n  match: '(lady|queen|sister|king|pope|father) #ProperNoun',\n  tag: 'Person',\n  reason: 'lady-titlecase',\n  safe: true\n}, // ==== Nickname ====\n// Dwayne 'the rock' Johnson\n{\n  match: '#FirstName [#Determiner #Noun] #LastName',\n  group: 0,\n  tag: 'Person',\n  reason: 'first-noun-last'\n}, {\n  match: '#ProperNoun (b|c|d|e|f|g|h|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z) #ProperNoun',\n  tag: 'Person',\n  reason: 'titlecase-acronym-titlecase',\n  safe: true\n}, {\n  match: '#Acronym #LastName',\n  tag: 'Person',\n  reason: 'acronym-lastname',\n  safe: true\n}, {\n  match: '#Person (jr|sr|md)',\n  tag: 'Person',\n  reason: 'person-honorific'\n}, //remove single 'mr'\n{\n  match: '#Honorific #Acronym',\n  tag: 'Person',\n  reason: 'Honorific-TitleCase'\n}, {\n  match: '#Person #Person the? #RomanNumeral',\n  tag: 'Person',\n  reason: 'roman-numeral'\n}, {\n  match: '#FirstName [/^[^aiurck]$/]',\n  group: 0,\n  tag: ['Acronym', 'Person'],\n  reason: 'john-e'\n}, //j.k Rowling\n{\n  match: '#Noun van der? #Noun',\n  tag: 'Person',\n  reason: 'van der noun',\n  safe: true\n}, //king of spain\n{\n  match: '(king|queen|prince|saint|lady) of #Noun',\n  tag: 'Person',\n  reason: 'king-of-noun',\n  safe: true\n}, //lady Florence\n{\n  match: '(prince|lady) #Place',\n  tag: 'Person',\n  reason: 'lady-place'\n}, //saint Foo\n{\n  match: '(king|queen|prince|saint) #ProperNoun',\n  tag: 'Person',\n  reason: 'saint-foo'\n}, // al sharpton\n{\n  match: 'al (#Person|#ProperNoun)',\n  tag: 'Person',\n  reason: 'al-borlen',\n  safe: true\n}, //ferdinand de almar\n{\n  match: '#FirstName de #Noun',\n  tag: 'Person',\n  reason: 'bill-de-noun'\n}, //Osama bin Laden\n{\n  match: '#FirstName (bin|al) #Noun',\n  tag: 'Person',\n  reason: 'bill-al-noun'\n}, //John L. Foo\n{\n  match: '#FirstName #Acronym #ProperNoun',\n  tag: 'Person',\n  reason: 'bill-acronym-title'\n}, //Andrew Lloyd Webber\n{\n  match: '#FirstName #FirstName #ProperNoun',\n  tag: 'Person',\n  reason: 'bill-firstname-title'\n}, //Mr Foo\n{\n  match: '#Honorific #FirstName? #ProperNoun',\n  tag: 'Person',\n  reason: 'dr-john-Title'\n}, //peter the great\n{\n  match: '#FirstName the #Adjective',\n  tag: 'Person',\n  reason: 'name-the-great'\n}, // dick van dyke\n{\n  match: '#ProperNoun (van|al|bin) #ProperNoun',\n  tag: 'Person',\n  reason: 'title-van-title',\n  safe: true\n}, //jose de Sucre\n{\n  match: '#ProperNoun (de|du) la? #ProperNoun',\n  tag: 'Person',\n  reason: 'title-de-title'\n}, //Jani K. Smith\n{\n  match: '#Singular #Acronym #LastName',\n  tag: '#FirstName #Person .',\n  reason: 'title-acro-noun',\n  safe: true\n}, //Foo Ford\n{\n  match: '[#ProperNoun] #Person',\n  group: 0,\n  tag: 'Person',\n  reason: 'proper-person',\n  safe: true\n}, // john keith jones\n{\n  match: '#Person [#ProperNoun #ProperNoun]',\n  group: 0,\n  tag: 'Person',\n  ifNo: '#Possessive',\n  reason: 'three-name-person',\n  safe: true\n}, //John Foo\n{\n  match: '#FirstName #Acronym? [#ProperNoun]',\n  group: 0,\n  tag: 'LastName',\n  ifNo: '#Possessive',\n  reason: 'firstname-titlecase'\n}, // john stewart\n{\n  match: '#FirstName [#FirstName]',\n  group: 0,\n  tag: 'LastName',\n  reason: 'firstname-firstname'\n}, //Joe K. Sombrero\n{\n  match: '#FirstName #Acronym #Noun',\n  tag: 'Person',\n  reason: 'n-acro-noun',\n  safe: true\n}, //Anthony de Marco\n{\n  match: '#FirstName [(de|di|du|van|von)] #Person',\n  group: 0,\n  tag: 'LastName',\n  reason: 'de-firstname'\n}, //Joe springer sr\n{\n  match: '#ProperNoun [#Honorific]',\n  group: 0,\n  tag: 'Person',\n  reason: 'last-sr'\n}, // dr john foobar\n{\n  match: '#Honorific #FirstName [#Singular]',\n  group: 0,\n  tag: 'LastName',\n  ifNo: '#Possessive',\n  reason: 'dr-john-foo',\n  safe: true\n}, //his-excellency\n{\n  match: '[(his|her) (majesty|honour|worship|excellency|honorable)] #Person',\n  group: 0,\n  tag: ['Honorific', 'Person'],\n  reason: 'his-excellency'\n}, //general pearson\n{\n  match: '#Honorific #Person',\n  tag: 'Person',\n  reason: 'honorific-person'\n}];","map":null,"metadata":{},"sourceType":"module"}