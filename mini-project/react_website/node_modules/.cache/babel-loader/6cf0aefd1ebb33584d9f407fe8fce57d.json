{"ast":null,"code":"// rough connection between compromise tagset and Penn Treebank\n// https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html\nvar mapping = {\n  // adverbs\n  // 'Comparative': 'RBR',\n  // 'Superlative': 'RBS',\n  'Adverb': 'RB',\n  // adjectives\n  'Comparative': 'JJR',\n  'Superlative': 'JJS',\n  'Adjective': 'JJ',\n  'TO': 'Conjunction',\n  // verbs\n  'Modal': 'MD',\n  'Auxiliary': 'MD',\n  'Gerund': 'VBG',\n  //throwing\n  'PastTense': 'VBD',\n  //threw\n  'Participle': 'VBN',\n  //thrown\n  'PresentTense': 'VBZ',\n  //throws\n  'Infinitive': 'VB',\n  //throw\n  'Particle': 'RP',\n  //phrasal particle\n  'Verb': 'VB',\n  // throw\n  // pronouns\n  'Pronoun': 'PRP',\n  // misc\n  'Cardinal': 'CD',\n  'Conjunction': 'CC',\n  'Determiner': 'DT',\n  'Preposition': 'IN',\n  // 'Determiner': 'WDT',\n  // 'Expression': 'FW',\n  'QuestionWord': 'WP',\n  'Expression': 'UH',\n  //nouns\n  'Possessive': 'POS',\n  'ProperNoun': 'NNP',\n  'Person': 'NNP',\n  'Place': 'NNP',\n  'Organization': 'NNP',\n  'Singular': 'NNP',\n  'Plural': 'NNS',\n  'Noun': 'NN' // 'Noun':'EX', //'there'\n  // 'Adverb':'WRB',\n  // 'Noun':'PDT', //predeterminer\n  // 'Noun':'SYM', //symbol\n  // 'Noun':'NFP', //\n  //  WDT \tWh-determiner\n  // \tWP \tWh-pronoun\n  // \tWP$ \tPossessive wh-pronoun\n  // \tWRB \tWh-adverb \n\n};\n\nvar toPenn = function toPenn(term) {\n  // try some ad-hoc ones\n  if (term.tags.has('ProperNoun') && term.tags.has('Plural')) {\n    return 'NNPS';\n  }\n\n  if (term.tags.has('Possessive') && term.tags.has('Pronoun')) {\n    return 'PRP$';\n  }\n\n  if (term.normal === 'there') {\n    return 'EX';\n  }\n\n  if (term.normal === 'to') {\n    return 'TO';\n  } // run through an ordered list of tags\n\n\n  var arr = term.tagRank || [];\n\n  for (var i = 0; i < arr.length; i += 1) {\n    if (mapping.hasOwnProperty(arr[i])) {\n      return mapping[arr[i]];\n    }\n  }\n\n  return null;\n};\n\nvar pennTag = function pennTag(view) {\n  view.compute('tagRank');\n  view.docs.forEach(function (terms) {\n    terms.forEach(function (term) {\n      term.penn = toPenn(term);\n    });\n  });\n};\n\nexport default pennTag;","map":null,"metadata":{},"sourceType":"module"}