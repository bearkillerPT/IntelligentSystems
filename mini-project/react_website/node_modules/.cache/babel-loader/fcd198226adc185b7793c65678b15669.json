{"ast":null,"code":"var hasDash = /[a-z0-9][-–—][a-z]/i; // match 're-do' -> ['re','do']\n\nvar splitHyphens = function splitHyphens(regs, world) {\n  var prefixes = world.model.one.prefixes;\n\n  var _loop = function _loop(i) {\n    var reg = regs[i];\n\n    if (reg.word && hasDash.test(reg.word)) {\n      var words = reg.word.split(/[-–—]/g); // don't split 're-cycle', etc\n\n      if (prefixes.hasOwnProperty(words[0])) {\n        return \"continue\";\n      }\n\n      words = words.filter(function (w) {\n        return w;\n      }).reverse();\n      regs.splice(i, 1);\n      words.forEach(function (w) {\n        var obj = Object.assign({}, reg);\n        obj.word = w;\n        regs.splice(i, 0, obj);\n      });\n    }\n  };\n\n  for (var i = regs.length - 1; i >= 0; i -= 1) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  return regs;\n};\n\nexport default splitHyphens;","map":null,"metadata":{},"sourceType":"module"}