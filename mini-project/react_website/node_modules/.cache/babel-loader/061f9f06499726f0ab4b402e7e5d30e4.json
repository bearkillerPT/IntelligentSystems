{"ast":null,"code":"import parse from './01-parse.js'; // do some indexing on the list of matches\n\nvar compile = function compile(matches, world) {\n  // turn match-syntax into json\n  matches = parse(matches, world); // collect by wants and needs\n\n  var hooks = {};\n  matches.forEach(function (obj) {\n    // add needs\n    obj.needs.forEach(function (str) {\n      hooks[str] = hooks[str] || [];\n      hooks[str].push(obj);\n    }); // add wants\n\n    obj.wants.forEach(function (str) {\n      hooks[str] = hooks[str] || [];\n      hooks[str].push(obj);\n    });\n  }); // remove duplicates\n\n  Object.keys(hooks).forEach(function (k) {\n    var already = {};\n    hooks[k] = hooks[k].filter(function (obj) {\n      if (already[obj.match]) {\n        return false;\n      }\n\n      already[obj.match] = true;\n      return true;\n    });\n  }); // keep all un-cacheable matches (those with no needs) \n\n  var always = matches.filter(function (o) {\n    return o.needs.length === 0 && o.wants.length === 0;\n  });\n  return {\n    hooks: hooks,\n    always: always\n  };\n};\n\nexport default compile;","map":null,"metadata":{},"sourceType":"module"}