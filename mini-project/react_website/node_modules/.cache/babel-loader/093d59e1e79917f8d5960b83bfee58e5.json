{"ast":null,"code":"import { doAndBlock } from './logic/and-or.js';\nimport { getGroup } from '../_lib.js'; // '(foo && #Noun)' - require all matches on the term\n\nvar andBlock = function andBlock(state) {\n  var regs = state.regs;\n  var reg = regs[state.r];\n  var skipNum = doAndBlock(state);\n\n  if (skipNum) {\n    // handle 'not' logic\n    if (reg.negative === true) {\n      return null; // die\n    }\n\n    if (state.hasGroup === true) {\n      var g = getGroup(state, state.t);\n      g.length += skipNum;\n    } // ensure we're at the end\n\n\n    if (reg.end === true) {\n      var end = state.phrase_length - 1;\n\n      if (state.t + state.start_i !== end) {\n        return null;\n      }\n    }\n\n    state.t += skipNum; // log(`âœ“ |found-and|`)\n\n    return true;\n  } else if (!reg.optional) {\n    return null; //die\n  }\n\n  return true;\n};\n\nexport default andBlock;","map":null,"metadata":{},"sourceType":"module"}