{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport find from './find.js';\nimport _parse from './parse.js';\nimport gender from './gender.js'; // return the nth elem of a doc\n\nexport var getNth = function getNth(doc, n) {\n  return typeof n === 'number' ? doc.eq(n) : doc;\n};\n\nvar addMethod = function addMethod(View) {\n  /**\n   *\n   */\n  var People = /*#__PURE__*/function (_View) {\n    _inherits(People, _View);\n\n    function People(document, pointer, groups) {\n      var _this;\n\n      _classCallCheck(this, People);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(People).call(this, document, pointer, groups));\n      _this.viewType = 'People';\n      return _this;\n    }\n\n    _createClass(People, [{\n      key: \"parse\",\n      value: function parse(n) {\n        return getNth(this, n).map(_parse);\n      }\n    }, {\n      key: \"json\",\n      value: function json(n) {\n        var doc = getNth(this, n);\n        return doc.map(function (p) {\n          var json = p.toView().json(n)[0];\n\n          var parsed = _parse(p);\n\n          json.person = {\n            firstName: parsed.firstName.text('normal'),\n            lastName: parsed.lastName.text('normal'),\n            honorific: parsed.honorific.text('normal'),\n            presumed_gender: gender(parsed, p)\n          };\n          return json;\n        }, []);\n      } // overloaded - keep People class\n\n    }, {\n      key: \"update\",\n      value: function update(pointer) {\n        var m = new People(this.document, pointer);\n        m._cache = this._cache; // share this full thing\n\n        return m;\n      }\n    }]);\n\n    return People;\n  }(View);\n\n  View.prototype.people = function (n) {\n    var m = find(this);\n    m = getNth(m, n);\n    return new People(this.document, m.pointer);\n  };\n};\n\nexport default addMethod;","map":null,"metadata":{},"sourceType":"module"}