{"ast":null,"code":"var hasSlash = /\\//;\nvar hasDomain = /[a-z]\\.[a-z]/i;\nvar isMath = /[0-9]/; // const hasSlash = /[a-z\\u00C0-\\u00FF] ?\\/ ?[a-z\\u00C0-\\u00FF]/\n// const hasApostrophe = /['â€™]s$/\n\nvar addAliases = function addAliases(term, world) {\n  var str = term.normal || term.text;\n  var aliases = world.model.one.aliases; // lookup known aliases like '&'\n\n  if (aliases.hasOwnProperty(str)) {\n    term.alias = term.alias || [];\n    term.alias.push(aliases[str]);\n  } // support slashes as aliases\n\n\n  if (hasSlash.test(str) && !hasDomain.test(str) && !isMath.test(str)) {\n    var arr = str.split(hasSlash); // don't split urls and things\n\n    if (arr.length <= 2) {\n      arr.forEach(function (word) {\n        word = word.trim();\n\n        if (word !== '') {\n          term.alias = term.alias || [];\n          term.alias.push(word);\n        }\n      });\n    }\n  } // aliases for apostrophe-s\n  // if (hasApostrophe.test(str)) {\n  //   let main = str.replace(hasApostrophe, '').trim()\n  //   term.alias = term.alias || []\n  //   term.alias.push(main)\n  // }\n\n\n  return term;\n};\n\nexport default addAliases;","map":null,"metadata":{},"sourceType":"module"}