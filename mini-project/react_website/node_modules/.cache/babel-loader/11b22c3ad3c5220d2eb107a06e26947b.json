{"ast":null,"code":"import doRules from './lib.js';\nvar suffixes = [null, {\n  y: 'ily'\n}, {\n  ly: 'ly',\n  //unchanged\n  ic: 'ically'\n}, {\n  ial: 'ially',\n  ual: 'ually',\n  tle: 'tly',\n  ble: 'bly',\n  ple: 'ply',\n  ary: 'arily'\n}, {}, {}, {}];\nvar exceptions = {\n  cool: 'cooly',\n  whole: 'wholly',\n  full: 'fully',\n  good: 'well',\n  idle: 'idly',\n  public: 'publicly',\n  single: 'singly',\n  special: 'especially'\n}; // a lot of adjectives *don't really* have a adverb\n// 'roomy' -> 'roomily'\n// but here, conjugate what it would be, if it made sense to\n\nvar toAdverb = function toAdverb(str) {\n  if (exceptions.hasOwnProperty(str)) {\n    return exceptions[str];\n  }\n\n  var res = doRules(str, suffixes);\n\n  if (res) {\n    return res;\n  }\n\n  return str + 'ly';\n};\n\nexport default toAdverb; // console.log(toAdverb('unsightly'))","map":null,"metadata":{},"sourceType":"module"}