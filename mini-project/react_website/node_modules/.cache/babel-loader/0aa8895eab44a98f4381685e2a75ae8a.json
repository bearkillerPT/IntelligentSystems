{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n// put n new words where 1 word was\nvar insertContraction = function insertContraction(document, point, words) {\n  var _document$n;\n\n  var _point = _slicedToArray(point, 2),\n      n = _point[0],\n      w = _point[1];\n\n  if (!words || words.length === 0) {\n    return;\n  }\n\n  words = words.map(function (word, i) {\n    word.implicit = word.text;\n    word.machine = word.text;\n    word.pre = '';\n    word.post = '';\n    word.text = '';\n    word.normal = '';\n    word.index = [n, w + i];\n    return word;\n  });\n\n  if (words[0]) {\n    // move whitespace over\n    words[0].pre = document[n][w].pre;\n    words[words.length - 1].post = document[n][w].post; // add the text/normal to the first term\n\n    words[0].text = document[n][w].text;\n    words[0].normal = document[n][w].normal; // move tags too?\n  } // do the splice\n\n\n  (_document$n = document[n]).splice.apply(_document$n, [w, 1].concat(_toConsumableArray(words)));\n};\n\nexport default insertContraction;","map":null,"metadata":{},"sourceType":"module"}