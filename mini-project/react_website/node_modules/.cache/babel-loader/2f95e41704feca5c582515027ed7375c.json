{"ast":null,"code":"import canBe from './canBe.js';\n\nvar tagger = function tagger(list, document, world) {\n  var model = world.model,\n      methods = world.methods;\n  var _methods$one = methods.one,\n      getDoc = _methods$one.getDoc,\n      setTag = _methods$one.setTag,\n      unTag = _methods$one.unTag;\n\n  if (list.length === 0) {\n    return list;\n  } // some logging for debugging\n\n\n  var env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env;\n\n  if (env.DEBUG_TAGS) {\n    console.log(\"\\n\\n  \\x1B[32m\\u2192 \".concat(list.length, \" post-tagger:\\x1B[0m\")); //eslint-disable-line\n  }\n\n  return list.map(function (todo) {\n    if (!todo.tag && !todo.chunk) {\n      return;\n    }\n\n    var reason = todo.reason || todo.match;\n    var terms = getDoc([todo.pointer], document)[0]; // handle 'safe' tag\n\n    if (todo.safe === true) {\n      // check for conflicting tags\n      if (canBe(terms, todo.tag, model) === false) {\n        return;\n      } // dont tag half of a hyphenated word\n\n\n      if (terms[terms.length - 1].post === '-') {\n        return;\n      }\n    }\n\n    if (todo.tag !== undefined) {\n      setTag(terms, todo.tag, world, todo.safe, \"[post] '\".concat(reason, \"'\")); // quick and dirty plural tagger\n\n      if (terms.length === 1 && todo.tag === 'Noun') {\n        if (terms[0].text && terms[0].text.match(/..s$/) !== null) {\n          setTag(terms, 'Plural', world, todo.safe, 'quick-plural');\n        }\n      }\n    }\n\n    if (todo.unTag !== undefined) {\n      unTag(terms, todo.unTag, world, todo.safe, reason);\n    } // allow setting chunks, too\n\n\n    if (todo.chunk) {\n      terms.forEach(function (t) {\n        return t.chunk = todo.chunk;\n      });\n    }\n  });\n};\n\nexport default tagger;","map":null,"metadata":{},"sourceType":"module"}