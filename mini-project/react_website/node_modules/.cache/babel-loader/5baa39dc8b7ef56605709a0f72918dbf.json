{"ast":null,"code":"import { doDoes, getTense } from '../lib.js';\nvar keep = {\n  tags: true\n}; // all verb forms are the same\n\nvar toInfinitive = function toInfinitive(vb, parsed) {\n  var verbToInfinitive = vb.methods.two.transform.verbToInfinitive;\n  var root = parsed.root,\n      auxiliary = parsed.auxiliary;\n  var aux = auxiliary.terms().harden();\n  var str = root.text('normal');\n  str = verbToInfinitive(str, vb.model, getTense(root));\n\n  if (str) {\n    vb.replace(root, str, keep).tag('Verb').firstTerm().tag('Infinitive');\n  } // remove any auxiliary terms\n\n\n  if (aux.found) {\n    vb.remove(aux);\n  } // there is no real way to do this\n  // 'i not walk'?  'i walk not'?\n\n\n  if (parsed.negative.found) {\n    if (!vb.has('not')) {\n      vb.prepend('not');\n    }\n\n    var does = doDoes(vb, parsed);\n    vb.prepend(does);\n  }\n\n  vb.fullSentence().compute(['lexicon', 'preTagger', 'postTagger', 'chunks']);\n  return vb;\n};\n\nexport default toInfinitive;","map":null,"metadata":{},"sourceType":"module"}