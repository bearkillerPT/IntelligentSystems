{"ast":null,"code":"/** insert new words/phrases into the lexicon */\nvar addWords = function addWords(words) {\n  var world = this.world();\n  var methods = world.methods,\n      model = world.model;\n\n  if (!words) {\n    return;\n  } // normalize tag vals\n\n\n  Object.keys(words).forEach(function (k) {\n    if (typeof words[k] === 'string' && words[k].startsWith('#')) {\n      words[k] = words[k].replace(/^#/, '');\n    }\n  }); // add some words to our lexicon\n\n  if (methods.two.expandLexicon) {\n    // do fancy ./two version\n    var _methods$two$expandLe = methods.two.expandLexicon(words, world),\n        lex = _methods$two$expandLe.lex,\n        _multi = _methods$two$expandLe._multi;\n\n    Object.assign(model.one.lexicon, lex);\n    Object.assign(model.one._multiCache, _multi);\n  } else if (methods.one.expandLexicon) {\n    // do basic ./one version\n    var _methods$one$expandLe = methods.one.expandLexicon(words, world),\n        _lex = _methods$one$expandLe.lex,\n        _multi2 = _methods$one$expandLe._multi;\n\n    Object.assign(model.one.lexicon, _lex);\n    Object.assign(model.one._multiCache, _multi2);\n  } else {\n    //no fancy-business\n    Object.assign(model.one.lexicon, words);\n  }\n};\n\nexport default {\n  addWords: addWords\n};","map":null,"metadata":{},"sourceType":"module"}