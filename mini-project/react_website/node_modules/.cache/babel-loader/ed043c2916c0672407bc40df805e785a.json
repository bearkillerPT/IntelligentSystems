{"ast":null,"code":"import getSubject from './parse/getSubject.js';\n\nvar noop = function noop(vb) {\n  return vb;\n};\n\nvar isPlural = function isPlural(vb, parsed) {\n  var subj = getSubject(vb, parsed);\n  var m = subj.subject;\n\n  if (m.has('i') || m.has('we')) {\n    return true;\n  }\n\n  return subj.plural;\n};\n\nvar wasWere = function wasWere(vb, parsed) {\n  var _getSubject = getSubject(vb, parsed),\n      subject = _getSubject.subject,\n      plural = _getSubject.plural;\n\n  if (plural || subject.has('we')) {\n    return 'were';\n  }\n\n  return 'was';\n}; // present-tense copula\n\n\nvar isAreAm = function isAreAm(vb, parsed) {\n  // 'people were' -> 'people are'\n  if (vb.has('were')) {\n    return 'are';\n  } // 'i was' -> i am\n\n\n  var _getSubject2 = getSubject(vb, parsed),\n      subject = _getSubject2.subject,\n      plural = _getSubject2.plural;\n\n  if (subject.has('i')) {\n    return 'am';\n  }\n\n  if (subject.has('we') || plural) {\n    return 'are';\n  } // 'he was' -> he is\n\n\n  return 'is';\n};\n\nvar doDoes = function doDoes(vb, parsed) {\n  var subj = getSubject(vb, parsed);\n  var m = subj.subject;\n\n  if (m.has('i') || m.has('we')) {\n    return 'do';\n  }\n\n  if (subj.plural) {\n    return 'do';\n  }\n\n  return 'does';\n};\n\nvar getTense = function getTense(m) {\n  if (m.has('#Infinitive')) {\n    return 'Infinitive';\n  }\n\n  if (m.has('#Participle')) {\n    return 'Participle';\n  }\n\n  if (m.has('#PastTense')) {\n    return 'PastTense';\n  }\n\n  if (m.has('#Gerund')) {\n    return 'Gerund';\n  }\n\n  if (m.has('#PresentTense')) {\n    return 'PresentTense';\n  }\n\n  return undefined;\n};\n\nvar toInf = function toInf(vb, parsed) {\n  var verbToInfinitive = vb.methods.two.transform.verbToInfinitive;\n  var str = parsed.root.text({\n    keepPunct: false\n  });\n  str = verbToInfinitive(str, vb.model, getTense(vb));\n\n  if (str) {\n    vb.replace(parsed.root, str);\n  }\n\n  return vb;\n}; // i will start looking -> i started looking\n// i will not start looking -> i did not start looking\n\n\nvar noWill = function noWill(vb) {\n  if (vb.has('will not')) {\n    return vb.replace('will not', 'have not');\n  }\n\n  return vb.remove('will');\n};\n\nexport { noop, isPlural, isAreAm, doDoes, toInf, getSubject, getTense, wasWere, noWill };","map":null,"metadata":{},"sourceType":"module"}