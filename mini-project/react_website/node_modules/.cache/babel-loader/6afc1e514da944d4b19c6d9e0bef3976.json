{"ast":null,"code":"// generate all the possible prefixes up-front\nvar getPrefixes = function getPrefixes(arr, opts, world) {\n  var index = {};\n  var collisions = [];\n  var existing = world.prefixes || {};\n  arr.forEach(function (str) {\n    str = str.toLowerCase().trim();\n    var max = str.length;\n\n    if (opts.max && max > opts.max) {\n      max = opts.max;\n    }\n\n    for (var size = opts.min; size < max; size += 1) {\n      var prefix = str.substring(0, size); // ensure prefix is not a word\n\n      if (opts.safe && world.model.one.lexicon.hasOwnProperty(prefix)) {\n        continue;\n      } // does it already exist?\n\n\n      if (existing.hasOwnProperty(prefix) === true) {\n        collisions.push(prefix);\n        continue;\n      }\n\n      if (index.hasOwnProperty(prefix) === true) {\n        collisions.push(prefix);\n        continue;\n      }\n\n      index[prefix] = str;\n    }\n  }); // merge with existing prefixes\n\n  index = Object.assign({}, existing, index); // remove ambiguous-prefixes\n\n  collisions.forEach(function (str) {\n    delete index[str];\n  });\n  return index;\n};\n\nexport default getPrefixes;","map":null,"metadata":{},"sourceType":"module"}