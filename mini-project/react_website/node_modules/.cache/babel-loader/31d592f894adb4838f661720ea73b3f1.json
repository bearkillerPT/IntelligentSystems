{"ast":null,"code":"var env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env; // eslint-disable-line\n\nimport adhoc from './_adhoc.js';\nvar prefix = /^(under|over|mis|re|un|dis|semi)-?/;\n\nvar checkWord = function checkWord(term, obj) {\n  if (!term || !obj) {\n    return null;\n  }\n\n  var str = term.normal || term.implicit;\n  var found = obj[str];\n\n  if (found && env.DEBUG_TAGS) {\n    console.log(\"\\n  \\x1B[2m\\x1B[3m     \\u2193 - '\".concat(str, \"' \\x1B[0m\")); //eslint-disable-line\n  }\n\n  return found;\n};\n\nvar checkTag = function checkTag(term) {\n  var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var tagSet = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (!term || !obj) {\n    return null;\n  } // rough sort, so 'Noun' is after ProperNoun, etc\n\n\n  var tags = Array.from(term.tags).sort(function (a, b) {\n    var numA = tagSet[a] ? tagSet[a].parents.length : 0;\n    var numB = tagSet[b] ? tagSet[b].parents.length : 0;\n    return numA > numB ? -1 : 1;\n  });\n  var found = tags.find(function (tag) {\n    return obj[tag];\n  });\n\n  if (found && env.DEBUG_TAGS) {\n    console.log(\"  \\x1B[2m\\x1B[3m      \\u2193 - '\".concat(term.normal, \"' (#\").concat(found, \")  \\x1B[0m\")); //eslint-disable-line\n  }\n\n  found = obj[found];\n  return found;\n};\n\nvar pickTag = function pickTag(terms, i, clues, model) {\n  if (!clues) {\n    return null;\n  }\n\n  var tagSet = model.one.tagSet; // look -> right word, first\n\n  var tag = checkWord(terms[i + 1], clues.afterWords); // look <- left word, second\n\n  tag = tag || checkWord(terms[i - 1], clues.beforeWords); // look <- left tag \n\n  tag = tag || checkTag(terms[i - 1], clues.beforeTags, tagSet); // look -> right tag\n\n  tag = tag || checkTag(terms[i + 1], clues.afterTags, tagSet); // console.log(clues)\n\n  return tag;\n}; // words like 'bob' that can change between two tags\n\n\nvar doSwitches = function doSwitches(terms, i, world) {\n  var model = world.model;\n  var setTag = world.methods.one.setTag;\n  var _model$two = model.two,\n      switches = _model$two.switches,\n      clues = _model$two.clues;\n  var term = terms[i];\n  var str = term.normal || term.implicit || ''; // support prefixes for switching words\n\n  if (prefix.test(str) && !switches[str]) {\n    str = str.replace(prefix, ''); // could use some guards, here\n  }\n\n  if (term.switch) {\n    var form = term.switch; // skip propernouns, acronyms, etc\n\n    if (term.tags.has('Acronym') || term.tags.has('PhrasalVerb')) {\n      return;\n    }\n\n    var tag = pickTag(terms, i, clues[form], model); // lean-harder on some variable forms\n\n    if (adhoc[form]) {\n      tag = adhoc[form](terms, i) || tag;\n    } // did we find anything?\n\n\n    if (tag) {\n      setTag([term], tag, world, null, \"3-[variable] (\".concat(form, \")\"));\n    } else if (env.DEBUG_TAGS) {\n      console.log(\"\\n -> X  - '\".concat(str, \"'  : (\").concat(form, \")  \")); //eslint-disable-line\n    }\n  }\n};\n\nexport default doSwitches;","map":null,"metadata":{},"sourceType":"module"}