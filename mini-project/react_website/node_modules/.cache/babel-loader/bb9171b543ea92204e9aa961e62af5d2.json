{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { doesOverlap, getExtent, indexN, uniquePtrs } from './_lib.js'; // a union is a + b, minus duplicates\n\nvar getUnion = function getUnion(a, b) {\n  var both = a.concat(b);\n  var byN = indexN(both);\n  var res = [];\n  both.forEach(function (ptr) {\n    var _ptr = _slicedToArray(ptr, 1),\n        n = _ptr[0];\n\n    if (byN[n].length === 1) {\n      // we're alone on this sentence, so we're good\n      res.push(ptr);\n      return;\n    } // there may be overlaps\n\n\n    var hmm = byN[n].filter(function (m) {\n      return doesOverlap(ptr, m);\n    });\n    hmm.push(ptr);\n    var range = getExtent(hmm);\n    res.push(range);\n  });\n  res = uniquePtrs(res);\n  return res;\n};\n\nexport default getUnion; // two disjoint\n// console.log(getUnion([[1, 3, 4]], [[0, 1, 2]]))\n// two disjoint\n// console.log(getUnion([[0, 3, 4]], [[0, 1, 2]]))\n// overlap-plus\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 6]]))\n// overlap\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 3]]))\n// neighbours\n// console.log(getUnion([[0, 1, 3]], [[0, 3, 5]]))","map":null,"metadata":{},"sourceType":"module"}