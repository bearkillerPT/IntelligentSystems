{"ast":null,"code":"// if a clause starts with these, it's not a main clause\nvar subordinate = \"(after|although|as|because|before|if|since|than|that|though|when|whenever|where|whereas|wherever|whether|while|why|unless|until|once)\";\nvar relative = \"(that|which|whichever|who|whoever|whom|whose|whomever)\"; //try to remove secondary clauses\n\nvar mainClause = function mainClause(s) {\n  var m = s;\n\n  if (m.length === 1) {\n    return m;\n  } // if there's no verb, it's dependent\n\n\n  m = m.if('#Verb');\n\n  if (m.length === 1) {\n    return m;\n  } // this is a signal for subordinate-clauses\n\n\n  m = m.ifNo(subordinate);\n  m = m.ifNo('^even (if|though)');\n  m = m.ifNo('^so that');\n  m = m.ifNo('^rather than');\n  m = m.ifNo('^provided that');\n\n  if (m.length === 1) {\n    return m;\n  } // relative clauses\n\n\n  m = m.ifNo(relative);\n\n  if (m.length === 1) {\n    return m;\n  }\n\n  m = m.ifNo('(despite|during|before|through|throughout)');\n\n  if (m.length === 1) {\n    return m;\n  } // did we go too far?\n\n\n  if (m.length === 0) {\n    m = s;\n  } // choose the first one?\n\n\n  return m.eq(0);\n};\n\nexport default mainClause;","map":null,"metadata":{},"sourceType":"module"}