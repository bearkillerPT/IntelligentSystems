{"ast":null,"code":"// longest common prefix\nvar findOverlap = function findOverlap(from, to) {\n  var all = [];\n\n  for (var i = 0; i < from.length; i += 1) {\n    if (from[i] === to[i]) {\n      all.push(from[i]);\n    } else {\n      break;\n    }\n  }\n\n  return all.join('');\n};\n\nvar compress = function compress(key, val) {\n  var prefix = findOverlap(key, val);\n\n  if (prefix.length < 1) {\n    return [key, val];\n  }\n\n  var out = prefix.length + val.substr(prefix.length);\n  return [key, out];\n};\n\nexport default compress; // console.log(compress('fixture', 'fixturing'))","map":null,"metadata":{},"sourceType":"module"}