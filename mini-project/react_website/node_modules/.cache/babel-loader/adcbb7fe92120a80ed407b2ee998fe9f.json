{"ast":null,"code":"import allPrefixes from './allPrefixes.js';\n\nvar isObject = function isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n};\n\nvar defaults = {\n  safe: true,\n  min: 3\n};\n\nvar prepare = function prepare() {\n  var words = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var model = this.model();\n  opts = Object.assign({}, defaults, opts);\n\n  if (isObject(words)) {\n    Object.assign(model.one.lexicon, words);\n    words = Object.keys(words);\n  }\n\n  var prefixes = allPrefixes(words, opts, this.world()); // manually combine these with any existing prefixes\n\n  Object.keys(prefixes).forEach(function (str) {\n    // explode any overlaps\n    if (model.one.typeahead.hasOwnProperty(str)) {\n      delete model.one.typeahead[str];\n      return;\n    }\n\n    model.one.typeahead[str] = prefixes[str];\n  });\n  return this;\n};\n\nexport default {\n  typeahead: prepare\n};","map":null,"metadata":{},"sourceType":"module"}