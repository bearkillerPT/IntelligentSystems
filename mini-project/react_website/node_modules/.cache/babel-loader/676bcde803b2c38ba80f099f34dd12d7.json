{"ast":null,"code":"import methods from '../../methods/index.js';\nimport expandIrregulars from './irregulars.js';\nimport expandModels from './models.js';\nimport conjugate from '../../methods/transform/verbs/conjugate/index.js';\nimport { adjToSuperlative, adjToComparative } from '../../methods/transform/adjectives/index.js';\nimport toInfinitive from '../../methods/transform/verbs/toInfinitive/index.js';\nimport models from '../models/index.js';\nvar tmpModel = {\n  two: {\n    models: models\n  }\n}; // defaults for switches\n\nvar switchDefaults = {\n  // 'amusing'\n  'Adj|Gerund': 'Adjective',\n  //+conjugations\n  // 'standard'\n  'Adj|Noun': 'Adjective',\n  // 'boiled'\n  'Adj|Past': 'Adjective',\n  //+conjugations\n  // 'smooth'\n  'Adj|Present': 'Adjective',\n  //+conjugations\n  // 'box'\n  'Noun|Verb': 'Singular',\n  //+conjugations (no-present)\n  //'singing'\n  'Noun|Gerund': 'Gerund',\n  //+conjugations\n  // 'hope'\n  'Person|Noun': 'Noun',\n  // 'April'\n  'Person|Date': 'Month',\n  // 'rob'\n  'Person|Verb': 'Person',\n  //+conjugations\n  // 'victoria'\n  'Person|Place': 'Person',\n  // 'boxes'\n  'Plural|Verb': 'Plural' //(these are already derivative)\n\n};\n\nvar expandLexicon = function expandLexicon(words, model) {\n  // do clever tricks to grow the words\n  var world = {\n    model: model,\n    methods: methods\n  };\n\n  var _methods$two$expandLe = methods.two.expandLexicon(words, world),\n      lex = _methods$two$expandLe.lex,\n      _multi = _methods$two$expandLe._multi; // store multiple-word terms in a cache\n\n\n  Object.assign(model.one.lexicon, lex);\n  Object.assign(model.one._multiCache, _multi);\n  return model;\n}; // these words have no singular/plural conjugation\n\n\nvar addUncountables = function addUncountables(words, model) {\n  Object.keys(words).forEach(function (k) {\n    if (words[k] === 'Uncountable') {\n      model.two.uncountable[k] = true;\n      words[k] = 'Uncountable';\n    }\n  });\n  return model;\n};\n\nvar expandVerb = function expandVerb(str, words, doPresent) {\n  var obj = conjugate(str, tmpModel);\n  words[obj.PastTense] = words[obj.PastTense] || 'PastTense';\n  words[obj.Gerund] = words[obj.Gerund] || 'Gerund';\n\n  if (doPresent === true) {\n    // is this plural noun, or present-tense?\n    words[obj.PresentTense] = words[obj.PresentTense] || 'PresentTense';\n  }\n};\n\nvar expandAdjective = function expandAdjective(str, words, model) {\n  var sup = adjToSuperlative(str, model);\n  words[sup] = words[sup] || 'Superlative';\n  var comp = adjToComparative(str, model);\n  words[comp] = words[comp] || 'Comparative';\n}; // harvest ambiguous words for any conjugations\n\n\nvar expandVariable = function expandVariable(switchWords, model) {\n  var words = {};\n  var lex = model.one.lexicon; //add first tag as an assumption for each variable word\n\n  Object.keys(switchWords).forEach(function (w) {\n    var name = switchWords[w];\n    words[w] = switchDefaults[name]; // conjugate some verbs\n\n    if (name === 'Noun|Verb' || name === 'Person|Verb') {\n      expandVerb(w, lex, false);\n    }\n\n    if (name === 'Adj|Present') {\n      expandVerb(w, lex, true);\n      expandAdjective(w, lex, model);\n    }\n\n    if (name === 'Adj|Gerund' || name === 'Noun|Gerund') {\n      var inf = toInfinitive(w, tmpModel, 'Gerund');\n\n      if (!lex[inf]) {\n        words[inf] = 'Infinitive'; //expand it later\n      }\n    }\n\n    if (name === 'Adj|Past') {\n      var _inf = toInfinitive(w, tmpModel, 'PastTense');\n\n      if (!lex[_inf]) {\n        words[_inf] = 'Infinitive'; //expand it later\n      }\n    }\n  }); // add conjugations\n\n  model = expandLexicon(words, model);\n  return model;\n};\n\nvar expand = function expand(model) {\n  model = expandLexicon(model.one.lexicon, model);\n  model = addUncountables(model.one.lexicon, model);\n  model = expandVariable(model.two.switches, model);\n  model = expandModels(model);\n  model = expandIrregulars(model);\n  return model;\n};\n\nexport default expand;","map":null,"metadata":{},"sourceType":"module"}