{"ast":null,"code":"/** alphabetical order */\nvar alpha = function alpha(a, b) {\n  if (a.normal < b.normal) {\n    return -1;\n  }\n\n  if (a.normal > b.normal) {\n    return 1;\n  }\n\n  return 0;\n};\n/** count the # of characters of each match */\n\n\nvar length = function length(a, b) {\n  var left = a.normal.trim().length;\n  var right = b.normal.trim().length;\n\n  if (left < right) {\n    return 1;\n  }\n\n  if (left > right) {\n    return -1;\n  }\n\n  return 0;\n};\n/** count the # of terms in each match */\n\n\nvar wordCount = function wordCount(a, b) {\n  if (a.words < b.words) {\n    return 1;\n  }\n\n  if (a.words > b.words) {\n    return -1;\n  }\n\n  return 0;\n};\n/** count the # of terms in each match */\n\n\nvar sequential = function sequential(a, b) {\n  if (a[0] < b[0]) {\n    return 1;\n  }\n\n  if (a[0] > b[0]) {\n    return -1;\n  }\n\n  return a[1] > b[1] ? 1 : -1;\n};\n/** sort by # of duplicates in the document*/\n\n\nvar byFreq = function byFreq(arr) {\n  var counts = {};\n  arr.forEach(function (o) {\n    counts[o.normal] = counts[o.normal] || 0;\n    counts[o.normal] += 1;\n  }); // sort by freq\n\n  arr.sort(function (a, b) {\n    var left = counts[a.normal];\n    var right = counts[b.normal];\n\n    if (left < right) {\n      return 1;\n    }\n\n    if (left > right) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return arr;\n};\n\nexport default {\n  alpha: alpha,\n  length: length,\n  wordCount: wordCount,\n  sequential: sequential,\n  byFreq: byFreq\n};","map":null,"metadata":{},"sourceType":"module"}