{"ast":null,"code":"import doesMatch from '../../term/doesMatch.js'; // for greedy checking, we no longer care about the reg.start\n// value, and leaving it can cause failures for anchored greedy\n// matches.  ditto for end-greedy matches: we need an earlier non-\n// ending match to succceed until we get to the actual end.\n\nvar getGreedy = function getGreedy(state, endReg) {\n  var reg = Object.assign({}, state.regs[state.r], {\n    start: false,\n    end: false\n  });\n  var start = state.t;\n\n  for (; state.t < state.terms.length; state.t += 1) {\n    //stop for next-reg match\n    if (endReg && doesMatch(state.terms[state.t], endReg, state.start_i + state.t, state.phrase_length)) {\n      return state.t;\n    }\n\n    var count = state.t - start + 1; // is it max-length now?\n\n    if (reg.max !== undefined && count === reg.max) {\n      return state.t;\n    } //stop here\n\n\n    if (doesMatch(state.terms[state.t], reg, state.start_i + state.t, state.phrase_length) === false) {\n      // is it too short?\n      if (reg.min !== undefined && count < reg.min) {\n        return null;\n      }\n\n      return state.t;\n    }\n  }\n\n  return state.t;\n};\n\nvar greedyTo = function greedyTo(state, nextReg) {\n  var t = state.t; //if there's no next one, just go off the end!\n\n  if (!nextReg) {\n    return state.terms.length;\n  } //otherwise, we're looking for the next one\n\n\n  for (; t < state.terms.length; t += 1) {\n    if (doesMatch(state.terms[t], nextReg, state.start_i + t, state.phrase_length) === true) {\n      // console.log(`greedyTo ${state.terms[t].normal}`)\n      return t;\n    }\n  } //guess it doesn't exist, then.\n\n\n  return null;\n};\n\nvar isEndGreedy = function isEndGreedy(reg, state) {\n  if (reg.end === true && reg.greedy === true) {\n    if (state.start_i + state.t < state.phrase_length - 1) {\n      var tmpReg = Object.assign({}, reg, {\n        end: false\n      });\n\n      if (doesMatch(state.terms[state.t], tmpReg, state.start_i + state.t, state.phrase_length) === true) {\n        // console.log(`endGreedy ${state.terms[state.t].normal}`)\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nexport { isEndGreedy, greedyTo, getGreedy };","map":null,"metadata":{},"sourceType":"module"}