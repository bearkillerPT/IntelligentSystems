{"ast":null,"code":"// return the nth elem of a doc\nexport var getNth = function getNth(doc, n) {\n  return typeof n === 'number' ? doc.eq(n) : doc;\n};\n/** return anything tagged as a phone number */\n\nvar phoneNumbers = function phoneNumbers(n) {\n  var m = this.splitAfter('@hasComma');\n  m = m.match('#PhoneNumber+');\n  m = getNth(m, n);\n  return m;\n}; // setup easy helper methods\n\n\nvar selections = [['hyphenated', '@hasHyphen .'], ['hashTags', '#HashTag'], ['emails', '#Email'], ['emoji', '#Emoji'], ['emoticons', '#Emoticon'], ['atMentions', '#AtMention'], ['urls', '#Url'], ['pronouns', '#Pronoun'], ['conjunctions', '#Conjunction'], ['prepositions', '#Preposition'], ['abbreviations', '#Abbreviation'], ['honorifics', '#Honorific']]; // aliases\n\nvar aliases = [['emojis', 'emoji'], ['atmentions', 'atMentions']];\n\nvar addMethods = function addMethods(View) {\n  // add a list of new helper methods\n  selections.forEach(function (a) {\n    View.prototype[a[0]] = function (n) {\n      var m = this.match(a[1]);\n      return typeof n === 'number' ? m.get(n) : m;\n    };\n  });\n  View.prototype.phoneNumbers = phoneNumbers; // add aliases\n\n  aliases.forEach(function (a) {\n    View.prototype[a[0]] = View.prototype[a[1]];\n  });\n};\n\nexport default addMethods;","map":null,"metadata":{},"sourceType":"module"}