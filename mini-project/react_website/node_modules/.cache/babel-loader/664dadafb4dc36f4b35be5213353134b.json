{"ast":null,"code":"// chop-off tail of redundant vals at end of array\nvar truncate = function truncate(list, val) {\n  for (var i = list.length - 1; i >= 0; i -= 1) {\n    if (list[i] !== val) {\n      list = list.slice(0, i + 1);\n      return list;\n    }\n  }\n\n  return list;\n}; // prune trie a bit\n\n\nvar compress = function compress(trie) {\n  trie.goNext = trie.goNext.map(function (o) {\n    if (Object.keys(o).length === 0) {\n      return undefined;\n    }\n\n    return o;\n  }); // chop-off tail of undefined vals in goNext array\n\n  trie.goNext = truncate(trie.goNext, undefined); // chop-off tail of zeros in failTo array\n\n  trie.failTo = truncate(trie.failTo, 0); // chop-off tail of nulls in endAs array\n\n  trie.endAs = truncate(trie.endAs, null);\n  return trie;\n};\n\nexport default compress;","map":null,"metadata":{},"sourceType":"module"}