{"ast":null,"code":"// roughly, split a document by comma or semicolon\nvar splitOn = function splitOn(terms, i) {\n  var isNum = /^[0-9]+$/;\n  var term = terms[i]; // early on, these may not be dates yet:\n\n  if (!term) {\n    return false;\n  }\n\n  var maybeDate = new Set(['may', 'april', 'august', 'jan']); // veggies, like figs\n\n  if (term.normal === 'like' || maybeDate.has(term.normal)) {\n    return false;\n  } // toronto, canada  - tuesday, march\n\n\n  if (term.tags.has('Place') || term.tags.has('Date')) {\n    return false;\n  }\n\n  if (terms[i - 1]) {\n    if (terms[i - 1].tags.has('Date') || maybeDate.has(terms[i - 1].normal)) {\n      return false;\n    }\n  } // don't split numbers, yet\n\n\n  var str = term.normal;\n\n  if (str.length === 1 || str.length === 2 || str.length === 4) {\n    if (isNum.test(str)) {\n      return false;\n    }\n  }\n\n  return true;\n}; // kind-of a dirty sentence chunker\n\n\nvar quickSplit = function quickSplit(document) {\n  var splitHere = /[,:;]/;\n  var arr = [];\n  document.forEach(function (terms) {\n    var start = 0;\n    terms.forEach(function (term, i) {\n      // does it have a comma/semicolon ?\n      if (splitHere.test(term.post) && splitOn(terms, i + 1)) {\n        arr.push(terms.slice(start, i + 1));\n        start = i + 1;\n      }\n    });\n\n    if (start < terms.length) {\n      arr.push(terms.slice(start, terms.length));\n    }\n  });\n  return arr;\n};\n\nexport default quickSplit;","map":null,"metadata":{},"sourceType":"module"}