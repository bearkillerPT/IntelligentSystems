{"ast":null,"code":"import learn from './learn.js';\nimport { indexRules } from '../_lib.js';\n\nvar mergeExceptions = function mergeExceptions(fwd, bkwd) {\n  Object.entries(bkwd).forEach(function (b) {\n    fwd[b[1]] = b[0]; //reverse\n  });\n  return fwd;\n};\n\nvar learnBoth = function learnBoth(pairs) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var fwd = learn(pairs, opts); // learn backward too?\n\n  if (opts.reverse !== false) {\n    pairs = pairs.map(function (a) {\n      return [a[1], a[0]];\n    });\n    var bkwd = learn(pairs, opts); // merge exceptions\n\n    fwd.exceptions = mergeExceptions(fwd.exceptions, bkwd.exceptions); // add rules\n\n    fwd.rev = indexRules(bkwd.rules);\n  }\n\n  fwd.rules = indexRules(fwd.rules);\n  return fwd;\n};\n\nexport default learnBoth;","map":null,"metadata":{},"sourceType":"module"}