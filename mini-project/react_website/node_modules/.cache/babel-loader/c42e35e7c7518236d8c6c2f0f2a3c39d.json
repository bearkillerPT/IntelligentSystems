{"ast":null,"code":"import { learn, convert, compress, uncompress, reverse } from '../index.js';\nimport filesize from './filesize.js';\nimport testSide from './classify.js';\n\nvar green = function green(str) {\n  return '\\x1b[32m' + str + '\\x1b[0m';\n};\n\nvar red = function red(str) {\n  return '\\x1b[31m' + str + '\\x1b[0m';\n};\n\nvar blue = function blue(str) {\n  return '\\x1b[34m' + str + '\\x1b[0m';\n};\n\nvar yellow = function yellow(str) {\n  return '\\x1b[33m' + str + '\\x1b[0m';\n};\n\nvar dim = function dim(str) {\n  return '\\x1b[2m' + str + '\\x1b[0m';\n};\n\nvar testFwd = function testFwd(pairs, model) {\n  var wrong = 0;\n  pairs.forEach(function (a) {\n    var created = convert(a[0], model);\n\n    if (created !== a[1]) {\n      wrong += 1;\n      console.log(red('error:'), yellow(a[0] + ' →' + created));\n    }\n  });\n\n  if (wrong === 0) {\n    console.log(green(\"  \\u2713 forward\"));\n  } else {\n    console.log(red(\" \\u2717 \".concat(wrong, \" \")) + 'errors\\n');\n  }\n\n  return wrong;\n};\n\nvar testBack = function testBack(pairs, model) {\n  var wrong = 0;\n  var rev = reverse(model);\n  pairs.forEach(function (a) {\n    var created = convert(a[1], rev);\n\n    if (created !== a[0]) {\n      wrong += 1;\n      console.log(red('  rev ✗: '), yellow(a[1] + ' → ' + created));\n    }\n  });\n\n  if (wrong === 0) {\n    console.log(green(\"  \\u2713 backward\"));\n  } else {\n    console.log(red(\"  \\u2717 \".concat(wrong, \" \")) + 'errors reversed\\n');\n  }\n\n  return wrong;\n};\n\nvar testSize = function testSize(pairs, model) {\n  var before = filesize(pairs);\n  var smol = compress(model);\n  var after = filesize(smol);\n  console.log(\"  \".concat(dim(before), \" -> \").concat(blue(after)));\n};\n\nvar stats = function stats(model) {\n  var rules = 0;\n  Object.keys(model.rules).forEach(function (k) {\n    return rules += model.rules[k].length;\n  });\n  var rev = 0;\n  Object.keys(model.rev || {}).forEach(function (k) {\n    return rev += model.rev[k].length;\n  });\n  var exc = Object.keys(model.exceptions).length;\n  console.log(\"  \".concat(blue(rules.toLocaleString()), \" rules,  \").concat(yellow(rev.toLocaleString()), \" reversed,  \").concat(blue(exc.toLocaleString()), \" exceptions\"));\n};\n\nvar test = function test(pairs, opts) {\n  console.log('\\n');\n  console.log(yellow(pairs.length.toLocaleString()) + \" pairs -  \".concat(dim(filesize(pairs))));\n  var begin = new Date();\n  var model = learn(pairs, opts);\n  var end = new Date();\n  console.log('   ', (end.getTime() - begin.getTime()) / 1000, 'seconds');\n  console.log(yellow('\\nSize:'));\n  stats(model);\n  testSize(pairs, model);\n  model = compress(model);\n  model = uncompress(model);\n  console.log(yellow('\\nForward:'));\n  testFwd(pairs, model);\n  console.log(yellow('\\nBackward:'));\n  testBack(pairs, model); // hmm\n  // console.log(yellow('\\nClassify:'))\n  // testSide(pairs, model, 'Left')\n  // testSide(pairs, model, 'Right')\n};\n\nexport default test;","map":null,"metadata":{},"sourceType":"module"}