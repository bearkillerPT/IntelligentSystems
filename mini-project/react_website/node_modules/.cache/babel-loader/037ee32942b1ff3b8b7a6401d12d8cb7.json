{"ast":null,"code":"// filter-down list of maybe-matches\nvar localTrim = function localTrim(maybeList, docCache) {\n  return maybeList.map(function (list, n) {\n    var haves = docCache[n]; // ensure all stated-needs of the match are met\n\n    list = list.filter(function (obj) {\n      return obj.needs.every(function (need) {\n        return haves.has(need);\n      });\n    }); // ensure nothing matches in our 'ifNo' property\n\n    list = list.filter(function (obj) {\n      if (obj.ifNo !== undefined && obj.ifNo.some(function (no) {\n        return docCache[n].has(no);\n      }) === true) {\n        return false;\n      }\n\n      return true;\n    }); // ensure atleast one(?) of the wants is found\n\n    list = list.filter(function (obj) {\n      if (obj.wants.length === 0) {\n        return true;\n      } // ensure there's one cache-hit\n\n\n      var found = obj.wants.filter(function (str) {\n        return haves.has(str);\n      }).length;\n      return found >= obj.minWant;\n    });\n    return list;\n  });\n};\n\nexport default localTrim;","map":null,"metadata":{},"sourceType":"module"}