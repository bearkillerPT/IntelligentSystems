{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n// return the nth elem of a doc\nexport var getNth = function getNth(doc, n) {\n  return typeof n === 'number' ? doc.eq(n) : doc;\n};\nvar apostropheS = /'s$/;\n\nvar find = function find(doc) {\n  var m = doc.match('#Possessive+'); // expand it to include 'john smith's'\n\n  if (m.has('#Person')) {\n    m = m.growLeft('#Person+');\n  }\n\n  if (m.has('#Place')) {\n    m = m.growLeft('#Place+');\n  }\n\n  if (m.has('#Organization')) {\n    m = m.growLeft('#Organization+');\n  }\n\n  return m;\n};\n\nvar api = function api(View) {\n  var Possessives = /*#__PURE__*/function (_View) {\n    _inherits(Possessives, _View);\n\n    function Possessives(document, pointer, groups) {\n      var _this;\n\n      _classCallCheck(this, Possessives);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Possessives).call(this, document, pointer, groups));\n      _this.viewType = 'Possessives';\n      return _this;\n    }\n\n    _createClass(Possessives, [{\n      key: \"strip\",\n      value: function strip() {\n        this.docs.forEach(function (terms) {\n          terms.forEach(function (term) {\n            term.text = term.text.replace(apostropheS, '');\n            term.normal = term.normal.replace(apostropheS, '');\n          });\n        });\n        return this;\n      }\n    }]);\n\n    return Possessives;\n  }(View);\n\n  View.prototype.possessives = function (n) {\n    var m = find(this);\n    m = getNth(m, n);\n    return new Possessives(m.document, m.pointer);\n  };\n};\n\nexport default api;","map":null,"metadata":{},"sourceType":"module"}