{"ast":null,"code":"//similar to plural/singularize rules, but not the same\nvar isPlural = {\n  e: ['mice', 'louse', 'antennae', 'formulae', 'nebulae', 'vertebrae', 'vitae'],\n  i: ['tia', 'octopi', 'viri', 'radii', 'nuclei', 'fungi', 'cacti', 'stimuli'],\n  n: ['men']\n}; // plural words as exceptions to suffix-rules\n\nvar exceptions = new Set(['formulas', 'koalas', 'israelis', 'menus']);\nvar notPlural = ['bus', 'mas', //christmas\n'was', 'las', 'ias', //alias\n'xas', 'vas', 'cis', //probocis\n'lis', 'nis', //tennis\n'ois', 'ris', 'sis', //thesis\n'tis', //mantis, testis\n'xis', 'aus', 'cus', 'eus', //nucleus\n'fus', //doofus\n'gus', //fungus\n'ius', //radius\n'lus', //stimulus\n'nus', 'ous', 'pus', //octopus\n'rus', //virus\n'sus', //census\n'tus', //status,cactus\n'xus', '\\'s', 'ss'];\n\nvar looksPlural = function looksPlural(str) {\n  // not long enough to be plural\n  if (!str || str.length <= 3) {\n    return false;\n  } // 'menus' etc\n\n\n  if (exceptions.has(str)) {\n    return true;\n  }\n\n  var end = str[str.length - 1]; // look at 'firemen'\n\n  if (isPlural.hasOwnProperty(end)) {\n    return isPlural[end].find(function (suff) {\n      return str.endsWith(suff);\n    });\n  }\n\n  if (end !== 's') {\n    return false;\n  } // look for 'virus'\n\n\n  if (notPlural.find(function (suff) {\n    return str.endsWith(suff);\n  })) {\n    return false;\n  } // ends with an s, seems plural i guess.\n\n\n  return true;\n};\n\nexport default looksPlural;","map":null,"metadata":{},"sourceType":"module"}