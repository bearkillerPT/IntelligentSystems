{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\nvar isObject = function isObject(item) {\n  return item && _typeof(item) === 'object' && !Array.isArray(item);\n}; // recursive merge of objects\n\n\nfunction mergeDeep(model, plugin) {\n  if (isObject(plugin)) {\n    for (var key in plugin) {\n      if (isObject(plugin[key])) {\n        if (!model[key]) Object.assign(model, _defineProperty({}, key, {}));\n        mergeDeep(model[key], plugin[key]); //recursion\n        // } else if (isArray(plugin[key])) {\n        // console.log(key)\n        // console.log(model)\n      } else {\n        Object.assign(model, _defineProperty({}, key, plugin[key]));\n      }\n    }\n  }\n\n  return model;\n} // const merged = mergeDeep({ a: 1 }, { b: { c: { d: { e: 12345 } } } })\n// console.dir(merged, { depth: 5 })\n// vroom\n\n\nfunction mergeQuick(model, plugin) {\n  for (var key in plugin) {\n    model[key] = model[key] || {};\n    Object.assign(model[key], plugin[key]);\n  }\n\n  return model;\n}\n\nvar extend = function extend(plugin, world, View, nlp) {\n  var methods = world.methods,\n      model = world.model,\n      compute = world.compute,\n      hooks = world.hooks;\n\n  if (plugin.methods) {\n    mergeQuick(methods, plugin.methods);\n  }\n\n  if (plugin.model) {\n    mergeDeep(model, plugin.model);\n  } // shallow-merge compute\n\n\n  if (plugin.compute) {\n    Object.assign(compute, plugin.compute);\n  } // append new hooks\n\n\n  if (hooks) {\n    world.hooks = hooks.concat(plugin.hooks || []);\n  } // assign new class methods\n\n\n  if (plugin.api) {\n    plugin.api(View);\n  }\n\n  if (plugin.lib) {\n    Object.keys(plugin.lib).forEach(function (k) {\n      return nlp[k] = plugin.lib[k];\n    });\n  }\n\n  if (plugin.tags) {\n    nlp.addTags(plugin.tags);\n  }\n\n  if (plugin.words) {\n    nlp.addWords(plugin.words);\n  }\n\n  if (plugin.mutate) {\n    plugin.mutate(world);\n  }\n};\n\nexport default extend;","map":null,"metadata":{},"sourceType":"module"}