{"ast":null,"code":"import fastTag from '../_fastTag.js';\nimport fillTag from './_fillTags.js';\n\nvar lookAtWord = function lookAtWord(term, words) {\n  if (!term) {\n    return null;\n  } // look at prev word <-\n\n\n  var found = words.find(function (a) {\n    return term.normal === a[0];\n  });\n\n  if (found) {\n    return found[1];\n  }\n\n  return null;\n};\n\nvar lookAtTag = function lookAtTag(term, tags) {\n  if (!term) {\n    return null;\n  }\n\n  var found = tags.find(function (a) {\n    return term.tags.has(a[0]);\n  });\n\n  if (found) {\n    return found[1];\n  }\n\n  return null;\n}; // look at neighbours for hints on unknown words\n\n\nvar neighbours = function neighbours(terms, i, model) {\n  var _model$two$neighbours = model.two.neighbours,\n      leftTags = _model$two$neighbours.leftTags,\n      leftWords = _model$two$neighbours.leftWords,\n      rightWords = _model$two$neighbours.rightWords,\n      rightTags = _model$two$neighbours.rightTags;\n  var term = terms[i];\n\n  if (term.tags.size === 0) {\n    var tag = null; // look left <-\n\n    tag = tag || lookAtWord(terms[i - 1], leftWords); // look right ->\n\n    tag = tag || lookAtWord(terms[i + 1], rightWords); // look left <-\n\n    tag = tag || lookAtTag(terms[i - 1], leftTags); // look right ->\n\n    tag = tag || lookAtTag(terms[i + 1], rightTags);\n\n    if (tag) {\n      fastTag(term, tag, '3-[neighbour]');\n      fillTag(terms, i, model);\n      terms[i].confidence = 0.2;\n      return true;\n    }\n  }\n\n  return null;\n};\n\nexport default neighbours;","map":null,"metadata":{},"sourceType":"module"}