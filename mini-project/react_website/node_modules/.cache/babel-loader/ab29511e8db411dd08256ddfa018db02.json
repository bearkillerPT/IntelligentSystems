{"ast":null,"code":"// lookup last word in the type-ahead prefixes\nvar typeahead = function typeahead(view) {\n  var prefixes = view.model.one.typeahead;\n  var docs = view.docs;\n\n  if (docs.length === 0 || Object.keys(prefixes).length === 0) {\n    return;\n  }\n\n  var lastPhrase = docs[docs.length - 1] || [];\n  var lastTerm = lastPhrase[lastPhrase.length - 1]; // if we've already put whitespace, end.\n\n  if (lastTerm.post) {\n    return;\n  } // if we found something\n\n\n  if (prefixes.hasOwnProperty(lastTerm.normal)) {\n    var found = prefixes[lastTerm.normal]; // add full-word as an implicit result\n\n    lastTerm.implicit = found;\n    lastTerm.machine = found;\n    lastTerm.typeahead = true; // tag it, as our assumed term\n\n    if (view.compute.preTagger) {\n      view.last().unTag('*').compute(['lexicon', 'preTagger']);\n    }\n  }\n};\n\nexport default {\n  typeahead: typeahead\n};","map":null,"metadata":{},"sourceType":"module"}