{"ast":null,"code":"import { doesOverlap, indexN } from './_lib.js'; // [a,a,a,a,-,-,]\n// [-,-,b,b,b,-,]\n// [-,-,x,x,-,-,]\n\nvar intersection = function intersection(a, b) {\n  // find the latest-start\n  var start = a[1] < b[1] ? b[1] : a[1]; // find the earliest-end\n\n  var end = a[2] > b[2] ? b[2] : a[2]; // does it form a valid pointer?\n\n  if (start < end) {\n    return [a[0], start, end];\n  }\n\n  return null;\n};\n\nvar getIntersection = function getIntersection(a, b) {\n  var byN = indexN(b);\n  var res = [];\n  a.forEach(function (ptr) {\n    var hmm = byN[ptr[0]] || [];\n    hmm = hmm.filter(function (p) {\n      return doesOverlap(ptr, p);\n    }); // no sentence-pairs, so no intersection\n\n    if (hmm.length === 0) {\n      return;\n    }\n\n    hmm.forEach(function (h) {\n      var overlap = intersection(ptr, h);\n\n      if (overlap) {\n        res.push(overlap);\n      }\n    });\n  });\n  return res;\n};\n\nexport default getIntersection; // console.log(getIntersection([[0, 1, 3]], [[0, 2, 4]]))","map":null,"metadata":{},"sourceType":"module"}