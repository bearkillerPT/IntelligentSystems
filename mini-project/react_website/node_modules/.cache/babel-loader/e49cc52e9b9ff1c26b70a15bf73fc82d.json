{"ast":null,"code":"import fastTag from '../_fastTag.js';\nimport looksPlural from './looksPlural.js';\nimport getTense from '../../../methods/transform/verbs/getTense/index.js'; // tags that are neither plural or singular\n\nvar uncountable = ['Acronym', 'Abbreviation', 'ProperNoun', 'Uncountable', 'Possessive', 'Pronoun', 'Activity', 'Honorific']; // try to guess if each noun is a plural/singular\n\nvar setPluralSingular = function setPluralSingular(term) {\n  if (!term.tags.has('Noun') || term.tags.has('Plural') || term.tags.has('Singular') || term.tags.has('Date')) {\n    return;\n  }\n\n  if (uncountable.find(function (tag) {\n    return term.tags.has(tag);\n  })) {\n    return;\n  }\n\n  if (looksPlural(term.normal)) {\n    fastTag(term, 'Plural', '3-plural-guess');\n  } else {\n    fastTag(term, 'Singular', '3-singular-guess');\n  }\n}; // try to guess the tense of a naked verb\n\n\nvar setTense = function setTense(term) {\n  var tags = term.tags;\n\n  if (tags.has('Verb') && tags.size === 1) {\n    var guess = getTense(term.normal);\n\n    if (guess) {\n      fastTag(term, guess, '3-verb-tense-guess');\n    }\n  }\n}; //add deduced parent tags to our terms\n\n\nvar fillTags = function fillTags(terms, i, model) {\n  var term = terms[i]; //there is probably just one tag, but we'll allow more\n\n  var tags = Array.from(term.tags);\n\n  for (var k = 0; k < tags.length; k += 1) {\n    if (model.one.tagSet[tags[k]]) {\n      var toAdd = model.one.tagSet[tags[k]].parents;\n      fastTag(term, toAdd, \" -inferred by #\".concat(tags[k]));\n    }\n  } // turn 'Noun' into Plural/Singular\n\n\n  setPluralSingular(term); // turn 'Verb' into Present/PastTense\n\n  setTense(term, model);\n};\n\nexport default fillTags;","map":null,"metadata":{},"sourceType":"module"}