{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar hasOpen = /\\(/;\nvar hasClosed = /\\)/;\n\nvar findEnd = function findEnd(terms, i) {\n  for (; i < terms.length; i += 1) {\n    if (terms[i].post && hasClosed.test(terms[i].post)) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\nvar find = function find(doc) {\n  var ptrs = [];\n  doc.docs.forEach(function (terms) {\n    var isOpen = false;\n\n    for (var i = 0; i < terms.length; i += 1) {\n      var term = terms[i];\n\n      if (!isOpen && term.pre && hasOpen.test(term.pre)) {\n        var end = findEnd(terms, i);\n\n        if (end !== null) {\n          var _terms$i$index = _slicedToArray(terms[i].index, 2),\n              n = _terms$i$index[0],\n              start = _terms$i$index[1];\n\n          ptrs.push([n, start, end + 1, terms[i].id]);\n          i = end;\n        }\n      }\n    }\n  });\n  return doc.update(ptrs);\n};\n\nvar strip = function strip(m) {\n  m.docs.forEach(function (terms) {\n    terms[0].pre = terms[0].pre.replace(hasOpen, '');\n    var last = terms[terms.length - 1];\n    last.post = last.post.replace(hasClosed, '');\n  });\n  return m;\n};\n\nexport { find, strip };","map":null,"metadata":{},"sourceType":"module"}