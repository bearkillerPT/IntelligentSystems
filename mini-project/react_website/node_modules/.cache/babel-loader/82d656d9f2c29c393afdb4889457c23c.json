{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n// follow our trie structure\nvar scanWords = function scanWords(terms, trie, opts) {\n  var n = 0;\n  var results = [];\n\n  for (var i = 0; i < terms.length; i++) {\n    var word = terms[i][opts.form] || terms[i].normal; // main match-logic loop:\n\n    while (n > 0 && (trie.goNext[n] === undefined || !trie.goNext[n].hasOwnProperty(word))) {\n      n = trie.failTo[n] || 0; // (usually back to 0)\n    } // did we fail?\n\n\n    if (!trie.goNext[n].hasOwnProperty(word)) {\n      continue;\n    }\n\n    n = trie.goNext[n][word];\n\n    if (trie.endAs[n]) {\n      var arr = trie.endAs[n];\n\n      for (var o = 0; o < arr.length; o++) {\n        var len = arr[o];\n        var term = terms[i - len + 1];\n\n        var _term$index = _slicedToArray(term.index, 2),\n            no = _term$index[0],\n            start = _term$index[1];\n\n        results.push([no, start, start + len, term.id]);\n      }\n    }\n  }\n\n  return results;\n};\n\nvar cacheMiss = function cacheMiss(words, cache) {\n  for (var i = 0; i < words.length; i += 1) {\n    if (cache.has(words[i]) === true) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar scan = function scan(view, trie, opts) {\n  var results = [];\n  opts.form = opts.form || 'normal';\n  var docs = view.docs;\n\n  if (!trie.goNext || !trie.goNext[0]) {\n    console.error('Compromise invalid lookup trie'); //eslint-disable-line\n\n    return view.none();\n  }\n\n  var firstWords = Object.keys(trie.goNext[0]); // do each phrase\n\n  for (var i = 0; i < docs.length; i++) {\n    // can we skip the phrase, all together?\n    if (view._cache && view._cache[i] && cacheMiss(firstWords, view._cache[i]) === true) {\n      continue;\n    }\n\n    var terms = docs[i];\n    var found = scanWords(terms, trie, opts);\n\n    if (found.length > 0) {\n      results = results.concat(found);\n    }\n  }\n\n  return view.update(results);\n};\n\nexport default scan;","map":null,"metadata":{},"sourceType":"module"}